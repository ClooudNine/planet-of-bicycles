unit Tests;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls,
  System.ImageList, Vcl.ImgList, Vcl.Menus, ShellAPI;

type
  TDeviceT = class(TForm)
    DeviceTBg: TImage;
    TestsVariant: TRadioGroup;
    NextButton: TImage;
    Questions: TRadioGroup;
    Score: TLabel;
    PictureDevice: TImage;
    OnMainForm: TImage;
    Timer: TTimer;
    Time: TLabel;
    MainMenuTest: TMainMenu;
    N1: TMenuItem;
    N2: TMenuItem;
    N3: TMenuItem;
    procedure FormCreate(Sender: TObject);
    procedure TestsVariantClick(Sender: TObject);
    procedure NextButtonClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure OnMainFormClick(Sender: TObject);
    procedure TimerTimer(Sender: TObject);
    procedure N2Click(Sender: TObject);
    procedure N3Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  DeviceT: TDeviceT;
  f: text;
  s: string;
  Nvern, ball: integer;
  img_index:integer;
  i:integer;
  DeviceScore,PDDScore,TypesScore:integer;

implementation

{$R *.dfm}

uses RegistrationForm, Main, AboutProgram;

procedure TDeviceT.FormClose(Sender: TObject; var Action: TCloseAction);
begin
Reg.ADOTable2.Edit;
Reg.ADOTable2.FieldByName('UserScore').AsInteger := Reg.ADOTable2.FieldByName('UserDeviceTestScore').AsInteger + Reg.ADOTable2.FieldByName('UserPDDTestScore').AsInteger + Reg.ADOTable2.FieldByName('UserTypesTestScore').AsInteger;
Reg.ADOTable2.Post;
TestsVariant.ItemIndex := -1;
TestsVariant.Enabled := True;
Timer.Enabled := False;
Time.Visible := False;
Questions.Items.Clear;
Questions.Caption := 'Вопросы';
Questions.Visible := False;
PictureDevice.Visible := False;
MainForm.Show;
end;

procedure TDeviceT.FormCreate(Sender: TObject);
begin
DeviceT.Position := poDesktopCenter;
DeviceTBg.Picture.LoadFromFile('resources\screens_and_bg\device_test_bg.png');
NextButton.Picture.LoadFromFile('resources\buttons\authcomplete.png');
OnMainForm.Picture.LoadFromFile('resources\buttons\return_button.png');
OnMainForm.AutoSize := True;
NextButton.AutoSize := True;
NextButton.Enabled := False;
DeviceTBg.AutoSize := True;
Timer.Enabled := False;
TestsVariant.Font.Name := 'Minecraft Rus Regular';
Score.Font.Name := 'Minecraft Rus Regular';
Questions.Font.Name := 'Minecraft Rus Regular';
Questions.Font.Size := 16;
Score.Font.Size := 32;
Time.Font.Name := 'Minecraft Rus Regular';
Time.Font.Size := 16;
Time.Visible := False;
Score.Font.Color := clBlack;
Score.Visible := False;
Questions.Visible := False;
TestsVariant.Font.Size := 12;
end;

procedure TDeviceT.N2Click(Sender: TObject);
begin
ShellExecute(0, PChar('Open'),PChar('VeloLandHelp.chm'),nil,nil,SW_SHOW);
end;

procedure TDeviceT.N3Click(Sender: TObject);
begin
AProgramm.ShowModal;
end;

procedure TDeviceT.NextButtonClick(Sender: TObject);
begin
if (Questions.ItemIndex>-1) and (not Eof(f)) then begin
if Questions.ItemIndex = Nvern-1 then ball:=ball+100; //Если выбранный вариант соответствует
Questions.Items.Clear; //номеру верного ответа то балл прибавляется
Repeat //и очищается поле для следующего вопроса
if (s[1]='-') then begin
delete(s,1,1);
Questions.Caption:=s;
end
else if s[1]='*' then begin
delete(s,1,1);
Nvern:=StrToInt(s);
end
else Questions.Items.Add(s);
readln(f,s);
Score.Caption:=s;
until (s[1]='-') or (Eof(f));
if TestsVariant.ItemIndex = 0 then
  begin
    img_index := img_index + 1;
    PictureDevice.Picture.LoadFromFile('resources\tests\device_test\' + IntToStr(img_index) + '.jpg')
  end
else if TestsVariant.ItemIndex = 2 then
  begin
    img_index := img_index + 1;
    PictureDevice.Picture.LoadFromFile('resources\tests\types_test\' + IntToStr(img_index) + '.jpg')
  end;
end
//Если конец файла достигнут, значит вопросы закончились
Else if Eof(f) then begin
delete(s,1,1);
Nvern:=StrToInt(s);
if Questions.ItemIndex = Nvern-1 then ball:=ball+100;
Score.Visible := True;
Score.Caption:='Итоговый счёт: ' +IntToStr(ball); //Вывод количества баллов
Reg.ADOTable2.Edit;
if TestsVariant.ItemIndex = 0 then
  if ball > Reg.ADOTable2.FieldByName('UserDeviceTestScore').AsInteger then
    Reg.ADOTable2.FieldByName('UserDeviceTestScore').AsInteger := ball;
if TestsVariant.ItemIndex = 1 then
  if ball > Reg.ADOTable2.FieldByName('UserPDDTestScore').AsInteger then
    Reg.ADOTable2.FieldByName('UserPDDTestScore').AsInteger := ball;
if TestsVariant.ItemIndex = 2 then
  if ball > Reg.ADOTable2.FieldByName('UserTypesTestScore').AsInteger then
    Reg.ADOTable2.FieldByName('UserTypesTestScore').AsInteger := ball;
Reg.ADOTable2.Post;
CloseFile(f);
NextButton.Enabled:=False; //кнопка становится недоступной в завершении проекта
TestsVariant.Enabled := True;
TestsVariant.ItemIndex := -1;
Questions.Items.Clear;
Timer.Enabled := False;
end;
end;

procedure TDeviceT.OnMainFormClick(Sender: TObject);
begin
DeviceT.Close;
end;

procedure TDeviceT.TestsVariantClick(Sender: TObject);
begin
case TestsVariant.ItemIndex of //В зависимости от выбранного варианта переменная f
0: begin
    AssignFile( f ,'resources\tests\device_test\device_test.txt');//связывается с разными файлам
    DeviceScore := 0;
    img_index := 1;
    Questions.Font.Size := 16;
    Questions.Width := 700;
    PictureDevice.Left := 800;
    PictureDevice.Width := 545;
    PictureDevice.Height := 400;
    PictureDevice.Picture.LoadFromFile('resources\tests\device_test\' + IntToStr(img_index) + '.jpg');
    end;
1: begin
    if Reg.ADOTable2.FieldByName('UserScore').AsInteger < 700 then
    begin
        TestsVariant.ItemIndex := -1;
        ShowMessage('Наберите минимум 700 очков для прохождения этого теста!');
        exit;
    end
    else
      begin
      AssignFile( f ,'resources\tests\pdd_test\pdd_test.txt');
      PDDScore := 0;
      Questions.Font.Size := 12;
      Questions.Width := 1000;
      PictureDevice.Left := 1100;
      PictureDevice.Width := 350;
      PictureDevice.Height := 450;
      PictureDevice.Picture.LoadFromFile('resources\tests\pdd_test\traffic.png');
      end;
   end;
2: begin
    if Reg.ADOTable2.FieldByName('UserScore').AsInteger < 1400 then
      begin
        TestsVariant.ItemIndex := -1;
        ShowMessage('Наберите минимум 1400 очков для прохождения этого теста!');
        exit;
      end
      else
      begin
      AssignFile( f ,'resources\tests\types_test\types_test.txt');
      TypesScore := 0;
      img_index := 1;
      Questions.Font.Size := 14;
      Questions.Width := 700;
      PictureDevice.Left := 800;
      PictureDevice.Width := 700;
      PictureDevice.Height := 400;
      PictureDevice.Picture.LoadFromFile('resources\tests\types_test\' + IntToStr(img_index) + '.jpg');
      end;
    end;
end;
TestsVariant.Enabled:=false; //Выбор варианта становится недоступен
Questions.Enabled:=true; //Доступным становится поле с вопросом
NextButton.Enabled:=true; //Кнопка Далее
Score.Visible := False;
Questions.Visible := True;
PictureDevice.Visible := True;
i := 20;
Timer.Enabled := True;
Time.Visible := True;
reset(f); //Открываем файл для чтения
readln(f,s); //Считываем первую строку из файла
ball:=0; //изначально количество баллов 0
repeat
if (s[1]='-') then begin //Если первый символ строки ‘-‘ значит это вопрос
delete(s,1,1);
Questions.Caption:=s;
end
else if s[1]='*' then begin //Если перв символ ‘*’ значит это номер верного ответа
delete(s,1,1);
Nvern:=StrToInt(s);
end

else Questions.Items.Add(s); //Иначе это вариант ответа
readln(f,s); //Считываем следующую строку из файла
until (s[1]='-') or (Eof(f)); //Считывание и отправление вариантов ответов в RadiGroup до тех пор
// пока не достигнут следующий вопрос или конец файла
end;

procedure TDeviceT.TimerTimer(Sender: TObject);
var H,M,S:integer;
begin
i := i - 1;
H := I div 3600;
M := (I mod 3600) div 60;
S := (I mod 3600) mod 60;
Time.Caption := 'Оставшееся время:' + Format('%.2d:',[H]) + Format('%.2d:',[M]) + Format('%.2d',[S]);
if i = 0 then
begin
  Timer.Enabled := False;
  Questions.Enabled := False;
  NextButton.Enabled := False;
  TestsVariant.Enabled := True;
  Reg.ADOTable2.Edit;
  if TestsVariant.ItemIndex = 0 then
    if ball > Reg.ADOTable2.FieldByName('UserDeviceTestScore').AsInteger then
      Reg.ADOTable2.FieldByName('UserDeviceTestScore').AsInteger := ball;
  if TestsVariant.ItemIndex = 1 then
   if ball > Reg.ADOTable2.FieldByName('UserPDDTestScore').AsInteger then
      Reg.ADOTable2.FieldByName('UserPDDTestScore').AsInteger := ball;
  if TestsVariant.ItemIndex = 2 then
    if ball > Reg.ADOTable2.FieldByName('UserTypesTestScore').AsInteger then
      Reg.ADOTable2.FieldByName('UserTypesTestScore').AsInteger := ball;
  Reg.ADOTable2.Post;
  TestsVariant.ItemIndex := -1;
  Questions.Visible := False;
  PictureDevice.Visible := False;
  Questions.Items.Clear;
  ShowMessage('Время вышло! Вам начислено ' + IntToStr(ball) + 'очков!');
end;
end;

end.
